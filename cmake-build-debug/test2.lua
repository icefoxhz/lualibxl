---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by saber.
--- DateTime: 2022/6/21 10:14
---

local ExeclModel = require("lualibxl")
--print(ExeclModel)
--print(ExeclModel:new().instance, ExeclModel:new().instance)
-- --------------------------------------------
function test0()
    local xlsx1 = ExeclModel:new()
    for _ = 1, 10 do
        if xlsx1:open("D:\\1.xlsx") then
            if xlsx1:setCurrentSheet(0) then
                val1 = xlsx1:readCurrentSheet(15, 3)
                val2 = xlsx1:readCurrentSheet(16, 3)
                print(val1, val2)
            end
            xlsx1:close()
        end
    end
end

function test1()
    local xlsx1 = ExeclModel:new()
    if xlsx1:open("D:\\1.xlsx") then
        if xlsx1:addReadSheet("测试123") then
            print("创建sheet成功")
        end

        if xlsx1:setCurrentSheet(0) then
            xlsx1:writeCurrentSheet(15, 3, "你好 lua")
            xlsx1:writeCurrentSheet(16, 3, "阿斯顿发斯蒂芬斯蒂芬")
        end

        print(xlsx1:getSheetCount())

        --xlsx1:close()
        xlsx1:release()
    end
end

function test2()
    local xlsx1 = ExeclModel:new()
    if xlsx1:open("D:\\1.xlsx") then
        if xlsx1:setCurrentSheet(0) then
            val1 = xlsx1:readCurrentSheet(15, 3)
            val2 = xlsx1:readCurrentSheet(16, 3)
            print(val1, val2)
        end
    end
    --xlsx1:close()
    xlsx1:release()
end

function test3()
    local xlsx1 = ExeclModel:new()
    local xlsx2 = ExeclModel:new()
    print(xlsx1.instance, xlsx2.instance)

    if xlsx1:open("D:\\1.xlsx") and xlsx2:open("D:\\2.xlsx") then
        if xlsx1:setCurrentSheet(0) then
            print("xlsx1 setCurrentSheet ok")
            val1 = xlsx1:readCurrentSheet(15, 3)
            val2 = xlsx1:readCurrentSheet(16, 3)
            print(val1, val2)

            if xlsx2:addReadSheet("s1") then
                print("创建sheet成功")
            end

            if xlsx2:setCurrentSheet(0) then
                print("xlsx2 setCurrentSheet ok")
                xlsx2:writeCurrentSheet(10, 3, val1)
                xlsx2:writeCurrentSheet(11, 3, val2)
            end
        end
    end

    --xlsx1:close()
    --xlsx2:close()
    xlsx1:release()
    --print(xlsx1.instance, xlsx2.instance)
    xlsx2:release()
    --print(xlsx1.instance, xlsx2.instance)
end

test0()
--test1()
--test2()
--test3()
